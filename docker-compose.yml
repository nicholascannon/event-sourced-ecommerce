version: '3'

services:
  event-store:
    image: postgres:13.5-alpine
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 1s
      timeout: 2s
      retries: 15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecom
    ports:
      - 5432:5432

  flyway:
    build: ./services/event-store-db
    container_name: event-store-flyway
    command: migrate
    environment:
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: postgres
      FLYWAY_URL: jdbc:postgresql://event-store/ecom
      # Set the passwords for the users here
      FLYWAY_PLACEHOLDERS_ORDER_SERVICE_USER_PASSWORD: password1
      FLYWAY_PLACEHOLDERS_ORDER_PROCESS_MANAGER_USER_PASSWORD: password2
    depends_on:
      event-store:
        condition: service_healthy

  product-service:
    build: ./mocks/product-service
    environment:
      PORT: 8001
    ports:
      - 8001:8001

  order-service:
    build:
      dockerfile: order-service.dockerfile
      context: ./services
    environment:
      PORT: 8000
      DB_HOST: event-store
      DB_USER: order_writer
      DB_PASSWORD: password1
      DB_PORT: 5432
      DB_DATABASE: ecom
      PRODUCT_SERVICE_HOST: http://product-service:8001/v1
    ports:
      - 8000:8000
    depends_on:
      flyway:
        condition: service_completed_successfully
    profiles:
      - with-services

  checkout-pm:
    build:
      dockerfile: checkout-pm.dockerfile
      context: ./services
    environment:
      DB_HOST: event-store
      DB_USER: order_reader
      DB_PASSWORD: password2
      DB_PORT: 5432
      DB_DATABASE: ecom
    depends_on:
      flyway:
        condition: service_completed_successfully
    profiles:
      - with-services
